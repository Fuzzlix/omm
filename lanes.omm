--- makefile for lua-module lanes
--
if not WINDOWS then quit("We are not running on Windows?") end;
--
-----------------------------------------------------------------------------------------------
--
LUAROOT = LUAROOT or PWD
LUA_BIN = LUA_BIN or LUAROOT.."/bin" -- install dir
TEMPDIR = TEMPDIR or LUAROOT.."/tmp" -- dir for intermediate files
--
local LUAVER     = make.Needs"lua".LUAVERSION
local TEMPDIR    = TEMPDIR .. "/lua" .. LUAVER
local MODULES    = LUAROOT
local LUA_ETCDIR = LUA_BIN.."/etc"
local LUA_IDIR   = LUA_BIN.."/include/" .. LUAVER
local LUA_CDIR   = LUA_BIN.."/lib/" .. LUAVER
local LUA_LDIR   = LUA_BIN.."/lua"


if svn then svn.checkout{"lanes", "https://github.com/LuaLanes/lanes/trunk"}; end;
if make.utils.isDir("lanes") then -- module lanes
  -- [[
  local MODULE  = MODULES.."/lanes"
  local SRCDIR  = MODULE.."/src"
  local MODSRC  = "lanes compat threading tools deep keeper"
  local DEFINES  = ""
  --
  local MODS_C = c99 {"lanes_s", src=MODSRC, defines=DEFINES ,base=SRCDIR, odir=TEMPDIR, needs="luas", cflags=CFLAGS}
  local MODD_C = c99 {"lanes",   src=MODSRC, defines=DEFINES ,base=SRCDIR, odir=TEMPDIR, needs="lua windows", cflags=CFLAGS}
  --
  local MODLIB = c99.library {'lanes_core'..LUAVER, odir=LUA_IDIR, inputs=MODS_C, needs="luas"}           
  local MODDLL = c99.shared  {'lanes/core'..LUAVER, odir=LUA_CDIR, inputs=MODD_C, needs="lua", cflags=CFLAGS}
  local MODLUA = file {src="lanes", ext=".lua", base=SRCDIR, odir=LUA_CDIR}
  local MODBIN = group {MODLIB, MODDLL, MODLUA}
  target("lanes"..LUAVER, MODBIN)
  default{MODBIN}
  --
  if not make.Targets "lanes_doc" then
    local MODDOC = file {src="docs/*", base=MODULE, odir=LUA_ETCDIR.."/lanes"}
    target("lanes_doc", MODDOC)
    default{MODDOC}
  end;
  --]]
end; 
