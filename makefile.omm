if not WINDOWS then quit("We are not running on Windows?") end;
--
--include "gnu64";
include "gnu32";
include "svn";
include "windows";
--
OPTIMIZE = "O2";
NODEPS   = true; -- do not create or use dependency files generated by compilers.
--
-----------------------------------------------------------------------------------------------
LUAROOT = PWD;   -- base of the lua build tree (location of this makefile)
LUA_BIN = LUAROOT .. "/_install" .. (M32 and "32" or "") .. (M64 and "64" or "");
TEMPDIR = "/tmp" .. (M32 and "/32" or "") .. (M64 and "/64" or "");
CFLAGS  = "-pipe";
--
-----------------------------------------------------------------------------------------------
--
-- Dont use "luajit20" and "lua51" makefiles at the same time!
-- luajit acts as a replacement for lua51.
make "luajit20"
--make "lua51"
make "modules"
--
make "lua52"
make "modules"
--
make "lua53"
make "modules"
--
make "omm"

--[[-- This build script use a patched package.path and package.cpath:
       (Otherwise the resulting executables may not find the libs in
       PortableApp zenarios.)

for lua-5.1: (and luaJIT)

 #define LUA_LDIR	"!\\lua\\"
 #define LUA_CDIR	"!\\lib\\51\\"
 #define LUA_PATH_DEFAULT  \
 		LUA_LDIR"?.lua;"  LUA_LDIR"?\\init.lua;" \
		LUA_CDIR"?.lua;"  LUA_CDIR"?\\init.lua;" ".\\?.lua"
 #define LUA_CPATH_DEFAULT \
		LUA_CDIR"?51.dll;"	LUA_CDIR"?.dll;" \
		"!\\?51.dll;"	"!\\?.dll"

for lua-5.2:

 #define LUA_LDIR	"!\\lua\\"
 #define LUA_CDIR	"!\\lib\\52\\"
 #define LUA_PATH_DEFAULT  \
 		LUA_LDIR"?.lua;"  LUA_LDIR"?\\init.lua;" \
		LUA_CDIR"?.lua;"  LUA_CDIR"?\\init.lua;" ".\\?.lua"
 #define LUA_CPATH_DEFAULT \
		LUA_CDIR"?52.dll;"	LUA_CDIR"?.dll;" \
		"!\\?52.dll;"	"!\\?.dll"

for lua-5.3:

 #define LUA_LDIR	"!\\lua\\"
 #define LUA_CDIR	"!\\lib\\53\\"
 #define LUA_PATH_DEFAULT  \
 		LUA_LDIR"?.lua;"  LUA_LDIR"?\\init.lua;" \
		LUA_CDIR"?.lua;"  LUA_CDIR"?\\init.lua;" ".\\?.lua"
 #define LUA_CPATH_DEFAULT \
		LUA_CDIR"?53.dll;"	LUA_CDIR"?.dll;" \
		"!\\?53.dll;"	"!\\?.dll"

--]]--